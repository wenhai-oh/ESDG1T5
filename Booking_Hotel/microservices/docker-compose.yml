version: "3.8"

volumes:
  rabbitmq_data:

services:

  ###################################
  # Inventory: The Inventory microservice
  ###################################
  inventory:
    build:
      context: ./inventory
      dockerfile: inventory.Dockerfile
    image: <dockerid>/inventory:01
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/inventory_manager
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"
  
  ###################################
  # Product: The Product microservice
  ###################################
  product:
    build:
      context: ./product
      dockerfile: product.Dockerfile
    image: <dockerid>/product:01
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/product_manager
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  ##################################
  # Customer: The Customer microservice
  ##################################
  customer:
    build:
      context: ./
      dockerfile: customer.Dockerfile
    image: <dockerid>/customer:esd:01
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/customer_manager
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"

  ##################################
  # Reservation: The Reservation microservice
  ##################################
  reservation:
    build:
      context: ./
      dockerfile: reservation.Dockerfile
    image: lzk734/reservation:esd:01
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/reservation_manager
      PYTHONUNBUFFERED: 1
    ports:
      - "5300:5300"

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq